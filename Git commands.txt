Git and GitHub
Git is a version control system that allows you to track changes to your files and collaborate 
with others. It is used to manage the history of your code and to merge changes from different 
branches. I can understand that as of now these terms like version control, branches, 
and merges are not familiar to you. But donâ€™t worry, we will learn them in this tutorial.

Git and Github are different
Git is a version control system that is used to track changes to your files. 
It is a free and open-source software that is available for Windows, macOS, and Linux. 
Remember, GIT is a software and can be installed on your computer.

Github is a web-based hosting service for Git repositories. 
Github is an online platform that allows you to store and share your code with others. 
It is a popular platform for developers to collaborate on projects and to share code. 
It is not that Github is the only provider of Git repositories, but it is one of the most popular
ones.

A little on version control systems
Version control systems are used to manage the history of your code. 
They allow you to track changes to your files and to collaborate with others. 
Version control systems are essential for software development. 
Consider version control as a checkpoint in game. You can move to any time in the game and you 
can always go back to the previous checkpoint. 
This is the same concept in software development.

Before Git became mainstream, version control systems were used by developers to manage their 
code. They were called SCCS (Source Code Control System). SCCS was a proprietary software that 
was used to manage the history of code. It was expensive and not very user-friendly. 
Git was created to replace SCCS and to make version control more accessible and user-friendly. 
Some commong version control systems are Subversion (SVN), CVS, and Perforce.




Terminologies:

----------------------
Install git in your system. https://git-scm.com/downloads

Download this cheat sheet from internet :https://education.github.com/git-cheat-sheet-education.pdf

============================================

#git (to check all the commands in details)

#git init (initialised empty git repository)

===========================================
git add, git commit, git push

==========================================
to check git repository created or not
#ls -la (will see .git hidden directory )

#git status (to check git status - untracked files or not)

#git add file-name (now git will track of that file)

#git add . (All files)

#git diff (modified changes)

#git commit -m "fist version" (to add some commit why its happened)

#git log (to check all comments)
#git log --online (to check in all in short lines)

#git branch -M main (convert into some branch)

#git remote add origin "url"

#git remote -v (detail about fetch & push)

#git config --global user.name "tom jerry"
#git config --global user.email "tom&jerry@gmail.com" (git hub email id)

#git config --list (to check all git configuration list)


#git push origin main

==========================================

#yum install git -y
#git --version
#git config --global user.name "name"
#git config --global user.email "abc@gmail.com"
#git config --list (to check user detail)

GitHub.com to create account in github


=============== web-server ===========

after installation kindly go to web server home directory, and execute this command
sudo git clone https://github.com/your-username/your-repo.git .

=============== GitHub commands ====================

git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/ZubairQuazi/nareshit-demo.git
git push -u origin main
--------------------------------------